from cancion import *

class Nodo(object):

    def __init__(self, data):
        self.dato = data
        self.left = None
        self.right = None


    def insertar(self, elemento):
        if self.dato == elemento:
            return False
        elif (self.dato.interprete != elemento.interprete):
            if (self.dato.interprete > elemento.interprete):
                if self.left:
                    return self.left.insertar(elemento)
                else:
                    self.left = Nodo(elemento)
                    return True
            else:
                if self.right:
                    return self.right.insertar(elemento)
                else:
                    self.right = Nodo(elemento)
                    return True
        elif (self.dato.interprete == elemento.interprete):
            if (self.dato.titulo > elemento.titulo):
                if self.left:
                    return self.left.insertar(elemento)
                else:
                    self.left = Nodo(elemento)
                    return True
            else:
                if self.right:
                    return self.right.insertar(elemento)
                else:
                    self.right = Nodo(elemento)
                    return True

    
    def buscar(self, data):
        if self.dato == data:
            return True
        elif self.dato.interprete > data.interprete:
            if self.left:
                return self.left.buscar(data)
            else:
                return False
        else:
            if self.right:
                return self.right.buscar(data)
            else:
                return False


    def inorder(self):
        if self:
            if self.left:
                self.left.inorder()
            print(str(self.dato.aString()))
            if self.right:
                self.right.inorder()

    
    def minimo(self, subArbol):
        act = subArbol
        while act.left is not None:
            act = act.left
        return act.dato

    
    def eliminar(self, interprete, titulo):
        if self.dato is None:
            return self.dato

        if interprete < self.dato.interprete:
            self.left = self.left.eliminar(interprete, titulo)
        elif interprete > self.dato.interprete:
            self.right = self.right.eliminar(interprete, titulo)
        else:
            if titulo < self.dato.titulo:
                self.left = self.left.eliminar(interprete, titulo)
            elif titulo > self.dato.titulo:
                self.right = self.right.eliminar(interprete, titulo)
            else:
                if self.left is None:
                    temp = self.right
                    self.dato = None
                    return temp
                elif self.right is None:
                    temp = self.left
                    self.dato = None
                    return temp

                
                temp = self.right.minimo()

                self.dato.titulo = temp.titulo
                self.dato.interprete = temp.interprete
                self.dato.ubicacion = temp.ubicacion

                self.right = self.right.eliminar(temp.interprete, temp.titulo)
        
        return self.dato

    
    def secuenciar(self, lista):
        if self:
            if self.left:
                self.left.inorder()
            lista.append(self.dato)
            if self.right:
                self.right.inorder()

            
class arbolDeCanciones(object):
    def __init__(self):
        self.raiz = None
    

    def insertar(self, elemento):
        if self.raiz:
            return self.raiz.insertar(elemento)
        else:
            self.raiz = Nodo(elemento)
            return True
    

    def buscar(self, data):
        if self.raiz:
            return self.raiz.buscar(data)
        else:
            return False


    def inorder(self):
        print("En-Orden: ")
        self.raiz.inorder()


    def minimo(self, subArbol):
        act = subArbol
        while act.left is not None:
            act = act.left
        return act.dato


    def maximo(self, subArbol):
        act = subArbol
        while act.right is not None:
            act = act.right
        return act.dato

    
    def eliminar(self, interprete, titulo):
        print("Se procedera a eliminar la cancion " + str(titulo) + " del artista " + str(interprete) + " si existe en la lista de reproduccion.")
        if self.raiz is None:
            return False
        else:
            return self.raiz.eliminar(interprete, titulo)

    
    def deArbolASecuencia(self):
        lista = []
        if self.raiz is None:
            return lista
        else:            
            self.raiz.secuenciar(lista)

        return lista
